
file : /* empty */
     | file struct ;
     | file var ;
     | file var = exp ;
     | file function
     ;
   
//---------------------------------------
// STRUCT 
//---------------------------------------

struct : struct_opt }
       ;

struct_opt : id { 
           | struct_opt var ;
           ;

//---------------------------------------
// STATEMENT
//---------------------------------------

stm : if exp stm_block
    | while exp stm_block
    | exp ;
    | struct ;
    | var ;
    | var = exp ;
    ;
 
stm_block : stm_block_opt }
          ;

stm_block_opt : {
              | stm_block_opt stm
              ;
              
//---------------------------------------
// VARIABLE
//---------------------------------------

var : id : type
    ;

//---------------------------------------
// TYPE
//---------------------------------------

type : int
     | float
     | type *
     | [type; exp]
     | function_type 
     ;
     
function_type : ( )
              | ( ) -> type
              | function_type_opt )
              | function_type_opt ) -> type
              ;

function_type_opt : ( type
                  | function_type_opt , type
                  ;

//---------------------------------------
// FUNCTION
//---------------------------------------

function : id ( ) stm_block
         | id ( ) -> type stm_block
         | function_opt ) stm_block
         | function_opt ) -> type stm_block
         ;

function_opt : id ( var
             | function_opt , var
             ;

//---------------------------------------
// EXPRESSION 
//---------------------------------------

compound_l : compound_lit_opt }
           ;

compound_l_opt : ( type ) { . id = exp
                 | ( type ) { exp
                 | compound_lit_opt , . id = exp
                 | compound_lit_opt , exp
                 ;

exp : int_l
    | float_l
    | string_l
    | id 
    | compound_l
    | sizeof ( type )
    | sizeof ( exp )
    // -- 1 - ltr
    | exp . id
    | exp -> id
    | exp ++
    | exp --
    // -- 2 - rtl
    | ++ exp
    | -- exp
    | + exp
    | - exp
    | ! exp
    | ~ exp
    | ( type ) exp
    | * exp
    | & exp
    // -- 3 - ltr
    | exp * exp
    | exp / exp
    | exp % exp
    // -- 4 - ltr
    | exp + exp
    | exp - exp
    // -- 5 - ltr
    | exp << exp
    | exp >> exp
    // -- 6 - ltr
    | exp < exp
    | exp > exp
    | exp <= exp
    | exp >= exp
    // -- 7 - ltr
    | exp == exp
    | exp != exp
    // -- 8 - ltr
    | exp & exp
    // -- 9 - ltr
    | exp ^ exp
    // -- 10 - ltr
    | exp | exp
    // -- 11 - ltr
    | exp && exp
    // -- 12 - ltr
    | exp || exp
    // -- 13 - rtl
    | exp ? exp : exp
    // -- 14 - rtl
    | exp = exp
    | exp += exp
    | exp -= exp
    | exp *= exp 
    | exp /= exp
    | exp %= exp
    | exp <<= exp
    | exp >>= exp
    | exp &= exp
    | exp ^= exp
    | exp |= exp
    // -- 15 - ltr
    | compound_exp
    ;

compount_exp : compound_exp_opt )
             ;

compound_exp_opt : ( exp
                 | compound_exp_opt , exp
                 ;